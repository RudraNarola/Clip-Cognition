[
  {
    "segment": 1,
    "difficulty": 3,
    "question": "What is the purpose of using a 'for' loop in the context of lists?",
    "options": [
      "To sort the elements of the list.",
      "To access and process each element of the list individually.",
      "To modify the original list.",
      "To create a new list with the same elements."
    ],
    "answer": 1,
    "explanation": "A 'for' loop is used to iterate over a list, allowing you to access and work with each element one at a time."
  },
  {
    "segment": 2,
    "difficulty": 5,
    "question": "What does the 'enumerate()' function do when used with a list?",
    "options": [
      "It returns the length of the list.",
      "It sorts the list in ascending order.",
      "It creates a copy of the list.",
      "It returns both the index and value of each item in the list."
    ],
    "answer": 3,
    "explanation": "'enumerate()' provides an easy way to access both the index and value of each element during iteration, making it useful for tasks that require knowledge of element positions."
  },
  {
    "segment": 3,
    "difficulty": 7,
    "question": "How can you extract both the index and value from the tuple returned by 'enumerate()'?",
    "options": [
      "By using list indexing (e.g., item[0] for index, item[1] for value).",
      "By converting the tuple into a list.",
      "By using tuple unpacking (e.g., index, value = item).",
      "By calling a separate function to split the tuple."
    ],
    "answer": 2,
    "explanation": "Tuple unpacking allows you to assign the individual elements of a tuple to separate variables directly, providing a concise and efficient way to access both the index and value."
  },
  {
    "segment": 4,
    "difficulty": 4,
    "question": "What is a key advantage of using 'enumerate()' over manually tracking the index?",
    "options": [
      "It reduces code complexity and potential for errors.",
      "It makes the loop run faster.",
      "It allows you to modify the list within the loop.",
      "It provides additional features like sorting." 
    ],
    "answer": 0,
    "explanation": "'enumerate()' simplifies the process of accessing both index and value, making the code cleaner and less prone to mistakes compared to manually managing an index variable."
  }
] 
